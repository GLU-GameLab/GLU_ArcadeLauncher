@page
@using ArcadeLauncher.Pages.Components
@model IndexModel
@{
    ViewData["Title"] = "Arcade Machine Menu";

}

<div id="StartText" class="text-center ">
    <h2 style="font-size: 300%;">Press the start button to play!</h2>
</div>

<div id="MenuText" class="text-center hidden">
    @(await Html.RenderComponentAsync<ButtonsComponent>(RenderMode.Server))
    </div>


</div> 

<script>

    const rAF = window.mozRequestAnimationFrame || window.requestAnimationFrame;

    var focusableElements = document.querySelectorAll(
        '.play-btn'
    );

    var current = 0;

    window.addEventListener('gamepadconnected', function (event) {
        console.log(event);
        updateLoop();
        document.querySelector("#StartText").classList.add("hidden");
        document.querySelector("#MenuText").classList.remove("hidden");
        focusableElements = document.querySelectorAll(
            '.play-btn'
        );
    });

    function updateLoop() {

        const gamepad = navigator.getGamepads()[0];
        const xBoxButtonB = gamepad.buttons[1];
        const xBoxStickLeft = gamepad.axes[0];

        if (xBoxButtonB.pressed) { testConsole() }

        var timeout = 0;
        if (xBoxStickLeft < -0.1)
        { 
            timeout = 500;
            prevItem(current) 
        }
        if (xBoxStickLeft > 0.1) 
        {
            timeout = 500;
            nextItem(current) 
        }
        setTimeout(() => rAF(updateLoop), timeout);
    }

    function testConsole() {
        focusableElements[current].click();
    }

    function nextItem(index) {
        current = (index + 1) % focusableElements.length;
        focusableElements[current].focus();
    }

    function prevItem(index) {
        current = (index - 1) % focusableElements.length;
        if (current < 0) {
            current = focusableElements.length - 1;
        }
        focusableElements[current].focus();
    }
</script>


